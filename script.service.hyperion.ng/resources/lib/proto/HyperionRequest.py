# automatically generated by the FlatBuffers compiler, do not modify

# namespace: proto

import flatbuffers

class HyperionRequest(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsHyperionRequest(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = HyperionRequest()
        x.Init(buf, n + offset)
        return x

    # HyperionRequest
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # HyperionRequest
    def Command(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # HyperionRequest
    def ColorRequest(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .ColorRequest import ColorRequest
            obj = ColorRequest()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # HyperionRequest
    def ImageRequest(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .ImageRequest import ImageRequest
            obj = ImageRequest()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # HyperionRequest
    def ClearRequest(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .ClearRequest import ClearRequest
            obj = ClearRequest()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def HyperionRequestStart(builder): builder.StartObject(4)
def HyperionRequestAddCommand(builder, command): builder.PrependInt32Slot(0, command, 0)
def HyperionRequestAddColorRequest(builder, colorRequest): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(colorRequest), 0)
def HyperionRequestAddImageRequest(builder, imageRequest): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(imageRequest), 0)
def HyperionRequestAddClearRequest(builder, clearRequest): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(clearRequest), 0)
def HyperionRequestEnd(builder): return builder.EndObject()
